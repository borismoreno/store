---
import { CartCounter } from "@/components";

const { isLoggedIn, isAdmin } = Astro.locals;
---

<!-- component --><!-- style="background-color: #F9F9F9;" --><!-- <nav
    class="flex justify-between px-5 md:px-20 py-10 bg-[#F9F9F9] items-center fixed top-0 w-full z-10 h-20"
>
    <h1 class="text-xl text-gray-800 font-bold">
        <a href="/">AstroStore</a>
    </h1>
    <div class="flex space-x-6 items-center">
        <CartCounter client:load transition:persist />
        <div class="md:hidden block">
            <button class="lg:hidden" id="btn-menu">
                <svg
                    class="w-7 h-7"
                    fill="#000"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                >
                    <path
                        fill-rule="evenodd"
                        d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
                        clip-rule="evenodd"></path>
                </svg>
            </button>
        </div>
        <div class="items-center hidden md:flex">
            <ul class="flex items-center space-x-6">
                <li class="font-semibold text-gray-700">
                    <a href="/">Home</a>
                </li>
                {
                    isAdmin && (
                        <li class="font-semibold text-gray-700">
                            <a href="/admin/dashboard">Admin</a>
                        </li>
                    )
                }

                {
                    !isLoggedIn ? (
                        <li class="font-semibold text-gray-700">
                            <a href="/login">Ingresar</a>
                        </li>
                    ) : (
                        <li id="logout" class="font-semibold text-gray-700">
                            <a href="#">Salir</a>
                        </li>
                    )
                }
            </ul>
        </div>
    </div>
    <div
        id="mobile-menu"
        class="absoulte top-0 bg-black w-full text-5xl flex flex-col justify-content-center"
    >
        <button class="text-8xl self-end px-6"> &times; </button>
    </div>
</nav> -->
<header class="bg-[#F9F9F9] sticky top-0 z-10">
    <section class="max-w-4xl mx-auto p-4 flex justify-between items-center">
        <h1 class="text-xl text-gray-800 font-bold">
            <a href="/">Personalizarte</a>
        </h1>
        <div class="flex space-x-4 items-center">
            <CartCounter client:load transition:persist />
            <div>
                <button
                    id="hamburger-button"
                    class="text-3xl md:hidden cursor-pointer"
                >
                    &#9776;
                </button>
                <nav class="hidden md:flex items-center" aria-label="main">
                    <ul class="flex items-center space-x-6">
                        <li class="font-semibold text-gray-700">
                            <a href="/">Home</a>
                        </li>
                        {
                            isAdmin && (
                                <li class="font-semibold text-gray-700">
                                    <a href="/admin/dashboard">Admin</a>
                                </li>
                            )
                        }

                        {
                            !isLoggedIn ? (
                                <li class="font-semibold text-gray-700">
                                    <a href="/login">Ingresar</a>
                                </li>
                            ) : (
                                <li
                                    id="logout"
                                    class="font-semibold text-gray-700"
                                >
                                    <a href="#">Salir</a>
                                </li>
                            )
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </section>
    <section
        id="mobile-menu"
        class="absolute top-0 bg-black w-full text-white text-5xl flex-col justify-center origin-top animate-open-menu hidden"
    >
        <button class="text-8xl self-end px-6">&times;</button>
        <nav
            class="flex flex-col min-h-screen items-center py-8"
            aria-label="mobile"
        >
            <a href="/" class="w-full text-center py-6 hover:opacity-90">Home</a
            >
            {
                isAdmin && (
                    <a
                        href="/admin/dashboard"
                        class="w-full text-center py-6 hover:opacity-90"
                    >
                        Admin
                    </a>
                )
            }
            {
                !isLoggedIn ? (
                    <a
                        href="/login"
                        class="w-full text-center py-6 hover:opacity-90"
                    >
                        Ingresar
                    </a>
                ) : (
                    <a
                        id="logout-mobile"
                        class="w-full text-center py-6 hover:opacity-90"
                    >
                        Salir
                    </a>
                )
            }
        </nav>
    </section>
</header>

<script>
    const { signOut } = await import("auth-astro/client");

    document.addEventListener("astro:page-load", () => {
        const logoutElem = document.querySelector("#logout") as HTMLLIElement;

        logoutElem?.addEventListener("click", async () => {
            await signOut();
            window.location.href = "/";
        });

        const logoutMobile = document.querySelector(
            "#logout-mobile",
        ) as HTMLAnchorElement;

        logoutMobile?.addEventListener("click", async () => {
            await signOut();
            window.location.href = "/";
        });

        const btnMenu = document.querySelector(
            "#btn-menu",
        ) as HTMLButtonElement;

        btnMenu?.addEventListener("click", () => {
            console.log("click");
            btnMenu.remove();
        });

        const hamburgerButton = document.getElementById(
            "hamburger-button",
        ) as HTMLButtonElement;

        const mobileMenu = document.getElementById(
            "mobile-menu",
        ) as HTMLElement;

        const toggleMenu = () => {
            mobileMenu.classList.toggle("hidden");
            mobileMenu.classList.toggle("flex");
        };

        hamburgerButton?.addEventListener("click", toggleMenu);
        mobileMenu?.addEventListener("click", toggleMenu);
    });
</script>
